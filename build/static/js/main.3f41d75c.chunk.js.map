{"version":3,"sources":["components/Filter.js","components/Button.js","components/QuestionCard.js","components/Loader.js","components/AddQestionCard.js","components/Questions.js","firebase.js","actions/errorActions.js","actions/types.js","components/QuestionsBox.js","actions/questionActions.js","layouts/Footer.js","components/LoginTextInput.js","components/Login.js","actions/authActions.js","components/UserMenu.js","layouts/UserNavBar.js","layouts/NavBar.js","views/AccountDashboard.js","components/UsersBox.js","views/AdminDashboard.js","views/AllQuestionsView.js","reducers/authReducer.js","reducers/questionReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["Filter","state","value","showClose","onChange","e","inputs","target","split","map","el","trim","props","length","setState","resetFilter","className","type","placeholder","this","onClick","Component","Button","types","forEach","children","QuestionCard","editButtons","onDelete","onEdit","question","answer","keyWords","index","key","isDeletable","Loader","AddQestionCard","keyWordsString","setInputsFromProps","join","onInputChange","inputType","onKeyWordsChange","keyWordsArr","onSubmit","preventDefault","user","console","error","required","onClose","connect","auth","Questions","loader","msg","questions","showLoader","editedPosition","id","methods","onDeleteQuestion","onEditQuestion","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","firebaseui","AuthUI","database","backendFunctions","functions","returnErrors","status","payload","QuestionsBox","defaultQuestionsPerPage","filterInput","addingQuestion","isFiltering","numOfQuestions","loadQuestions","history","push","uid","fetchMyReviewQuestions","isPublisher","fetchAllReviewQuestions","fetchPublicQuestions","resetEditingQuestion","resetQuestionsNum","onAddingQuestion","onEndAddQuestion","onAddedQuestion","updateQuestion","createReviewQuestion","createPublicQuestion","loadMoreQuestions","oldQuestionsNum","onFilterChange","input","deleteQuestion","onEditedQuestion","position","findIndex","log","btns","isAdmin","questionsToRender","filter","flag","keyWord","toLowerCase","includes","splice","addQuestionCard","questionsRender","items","isAuthenticated","dispatch","ref","once","then","data","val","newQuestions","catch","err","message","code","databaseName","remove","orderByChild","equalTo","newQuestionRef","set","author","createdAt","Date","now","newQuestion","creator","firstName","lastName","email","dataToUpdate","update","Footer","LoginTextInput","name","htmlFor","label","icon","Login","register","password","city","onChangeFormType","registerUser","loginUser","isLoading","title","inputFields","loading","signInWithEmailAndPassword","cred","userData","createUserWithEmailAndPassword","withRouter","logOut","signOut","location","pathname","NavBar","showUserMenu","sticked","changeIcon","hideUserMenu","userMenu","rightCorner","to","style","textDecoration","isAuth","onMouseEnter","onMouseLeave","AccountDashboard","editMode","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","UsersBox","defaultUsersPerPage","users","numOfUsers","showModal","currentUser","modalMessage","upgrading","loadMoreUsres","oldUsersNum","resetUsersNum","onDeleteUser","onDowngradeUser","removeAdmin","removePublisher","onUpgradeUser","addAdmin","addPublisher","onConfirmUpgradeUser","find","onConfirmDowngradeUser","onCloseModal","on","newUsers","newUser","phone","off","usersToRender","myEmail","slice","isOpen","contentLabel","overlayClassName","onRequestClose","httpsCallable","AdminDashboard","AllQuestionsView","onAuthStateChanged","loadUser","path","component","render","exact","getIdTokenResult","idTokenResult","claims","admin","publisher","Error","initialState","item","combineReducers","action","newItems","newItemIndex","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f41d75c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { GoSearch } from 'react-icons/go';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nexport class Filter extends Component {\r\n    state = {\r\n        value: '',\r\n        showClose: false\r\n    };\r\n\r\n    onChange = e => {\r\n        const inputs = e.target.value.split(',').map(el => el.trim());\r\n        this.props.onChange(inputs);\r\n        if (e.target.value.length > 1) this.setState({ value: e.target.value, showClose: true });\r\n        else this.setState({ value: e.target.value, showClose: false });\r\n    };\r\n\r\n    resetFilter = () => {\r\n        this.setState({ value: '', showClose: false });\r\n        this.props.onChange([]);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <div className=\"filter__text\">\r\n                    <GoSearch className=\"filter__icon\" /> Szukaj!{' '}\r\n                </div>\r\n                <input\r\n                    className=\"filter__input js--filter-input\"\r\n                    type=\"text\"\r\n                    placeholder={this.props.placeholder}\r\n                    onChange={this.onChange}\r\n                    value={this.state.value}\r\n                />\r\n                {this.state.showClose ? (\r\n                    <MdClose className=\"filter__close\" onClick={this.resetFilter} />\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n    let className = 'btn ';\r\n    if (props.className) className += props.className + ' ';\r\n    if (props.type) className += 'btn--' + props.type + ' ';\r\n    if (props.types)\r\n        props.types.forEach(type => {\r\n            className += 'btn--' + type + ' ';\r\n        });\r\n\r\n    return (\r\n        <button onClick={props.onClick} className={className}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Fragment } from 'react';\r\nimport { MdSettings } from 'react-icons/md';\r\n\r\nconst QuestionCard = props => {\r\n    const editButtons = (\r\n        <Fragment>\r\n            <button className=\"question-card__delete-btn\" onClick={props.onDelete}>\r\n                <div></div>\r\n            </button>\r\n            <button className=\"question-card__edit-btn\" onClick={props.onEdit}>\r\n                <MdSettings />\r\n            </button>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"question-card\">\r\n            <h2 className=\"question-card__title\">{props.question}</h2>\r\n            <p className=\"question-card__answer\">{props.answer}</p>\r\n            <div className=\"question-card__key-words-title\">Słowa kluczowe:</div>\r\n            <div className=\"question-card__key-words\">\r\n                {props.keyWords && props.keyWords.map && props.keyWords.length > 0 ? (\r\n                    props.keyWords.map((el, index) => {\r\n                        if (!el || el.length < 1) return null;\r\n                        return (\r\n                            <div key={el + '' + index} className=\"question-card__key-word\">\r\n                                {el}\r\n                            </div>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div className=\"question-card__key-word--default\">Brak słów kluczowych</div>\r\n                )}\r\n            </div>\r\n            {props.isDeletable ? editButtons : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from 'react';\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <div className=\"lds-ring\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class AddQestionCard extends Component {\r\n    state = {\r\n        question: '',\r\n        answer: '',\r\n        keyWordsString: '',\r\n        keyWords: []\r\n    };\r\n\r\n    setInputsFromProps = () => {\r\n        this.setState({\r\n            question: this.props.question || '',\r\n            answer: this.props.answer || '',\r\n            keyWordsString: this.props.keyWords\r\n                ? this.props.keyWords.join\r\n                    ? this.props.keyWords.join(',')\r\n                    : ''\r\n                : '',\r\n            keyWords: this.props.keyWords || []\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setInputsFromProps();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (\r\n            !this.state.question &&\r\n            !this.state.answer &&\r\n            !this.state.keyWordsString &&\r\n            (this.props.question || this.props.answer || this.props.keyWords)\r\n        )\r\n            this.setInputsFromProps();\r\n    }\r\n\r\n    onInputChange = (e, inputType) => {\r\n        this.setState({ [inputType]: e.target.value });\r\n    };\r\n\r\n    onKeyWordsChange = e => {\r\n        const keyWordsArr = e.target.value.split(',').map(el => el.trim());\r\n        this.setState({\r\n            keyWordsString: e.target.value,\r\n            keyWords: keyWordsArr\r\n        });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (!this.props.user) {\r\n            console.error('Cant send question if not logged in!');\r\n            return;\r\n        }\r\n        const question = {\r\n            question: this.state.question,\r\n            answer: this.state.answer,\r\n            keyWords: this.state.keyWords\r\n        };\r\n\r\n        this.props.onSubmit(question);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"question-card\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    className=\"question-card__title question-card__title--input\"\r\n                    placeholder=\"Treść pytania...\"\r\n                    value={this.state.question}\r\n                    onChange={e => this.onInputChange(e, 'question')}\r\n                    required\r\n                />\r\n                <textarea\r\n                    className=\"question-card__answer question-card__answer--input\"\r\n                    placeholder=\"Treść odpowiedzi...\"\r\n                    value={this.state.answer}\r\n                    onChange={e => this.onInputChange(e, 'answer')}\r\n                    required\r\n                />\r\n                <div className=\"question-card__key-words-title\">Słowa kluczowe:</div>\r\n                <textarea\r\n                    className=\"question-card__key-words question-card__key-words--input\"\r\n                    placeholder=\"Słowa kluczowe oddzielone przecinkami\"\r\n                    onChange={this.onKeyWordsChange}\r\n                    value={this.state.keyWordsString}\r\n                />\r\n                <button className=\"question-card__btn\" type=\"submit\">\r\n                    Wyślij!\r\n                </button>\r\n                <button className=\"question-card__delete-btn\" onClick={this.props.onClose}>\r\n                    <div></div>\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AddQestionCard);\r\n","import React from 'react';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Loader } from './Loader';\r\nimport AddQestionCard from './AddQestionCard';\r\n\r\nconst Questions = props => {\r\n    const loader = (\r\n        <span className=\"u-centered\">\r\n            <Loader />\r\n        </span>\r\n    );\r\n\r\n    const msg = <h3 className=\"u-centered\">Nie znaleziono żadnych pytań.</h3>;\r\n\r\n    return (\r\n        <div className=\"questions-container\">\r\n            {props.questions.length === 0 ? (props.showLoader ? loader : msg) : null}\r\n\r\n            {props.questions.map((el, index) => {\r\n                if (props.editedPosition === index) {\r\n                    return (\r\n                        <AddQestionCard\r\n                            question={el.question}\r\n                            answer={el.answer}\r\n                            keyWords={el.keyWords}\r\n                            key={el.id}\r\n                            onClose={props.methods.onClose}\r\n                            onSubmit={question => props.methods.onSubmit(question, el.id)}\r\n                        />\r\n                    );\r\n                }\r\n                return (\r\n                    <QuestionCard\r\n                        key={el.id}\r\n                        id={el.id}\r\n                        question={el.question}\r\n                        answer={el.answer}\r\n                        keyWords={el.keyWords}\r\n                        onDelete={() => props.onDeleteQuestion(el.id)}\r\n                        onEdit={() => props.onEditQuestion(el.id)}\r\n                        isDeletable={el.isDeletable !== false}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Questions;\r\n","import firebase from 'firebase/app';\r\nimport * as firebaseui from 'firebaseui/';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\nimport 'firebase/functions';\r\n\r\n// FIREBASE config\r\nvar firebaseConfig = {\r\n    apiKey: 'AIzaSyAwlN24oXYrAEceYn1XB3fpAHi5cEFqzNw',\r\n    authDomain: 'baza-pytan.firebaseapp.com',\r\n    databaseURL: 'https://baza-pytan.firebaseio.com',\r\n    projectId: 'baza-pytan',\r\n    storageBucket: 'baza-pytan.appspot.com',\r\n    messagingSenderId: '361765519780',\r\n    appId: '1:361765519780:web:18b81c5a7f7f3257d6c131'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar uiConfig = {\r\n    signInSuccessUrl: '<url-to-redirect-to-on-success>',\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n    ],\r\n    tosUrl: '<your-tos-url>',\r\n    // Privacy policy url/callback.\r\n    privacyPolicyUrl: function() {\r\n        window.location.assign('<your-privacy-policy-url>');\r\n    }\r\n};\r\n\r\n// Initialize the FirebaseUI Widget using Firebase.\r\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n// The start method will wait until the DOM is loaded.\r\n// ui.start('#firebaseui-auth-container', uiConfig);\r\n\r\nexport const database = firebase.database();\r\nexport const auth = firebase.auth();\r\nexport const backendFunctions = firebase.functions();\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nexport const returnErrors = (msg, status) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status }\r\n    };\r\n};\r\n\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n","export const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\r\nexport const NEW_PRIVATE_QUESTION = 'NEW_PRIVATE_QUESTION';\r\nexport const NEW_PUBLIC_QUESTION = 'NEW_PUBLIC_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\r\nexport const QUESTION_ERROR = 'QUESTION_ERROR';\r\n\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const ADMIN_LOADED = 'ADMIN_LOADED';\r\nexport const ADMIN_FAIL = 'ADMIN_FAIL';\r\nexport const PUBLISHER_LOADED = 'PUBLISHER_LOADED';\r\nexport const PUBLISHER_FAIL = 'PUBLISHER_FAIL';\r\n\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import React, { Component, Fragment } from 'react';\r\nimport Filrer from './Filter';\r\nimport Button from './Button';\r\nimport Questions from './Questions';\r\nimport { database, backendFunctions } from '../firebase';\r\nimport AddQestionCard from './AddQestionCard';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    fetchPublicQuestions,\r\n    fetchMyReviewQuestions,\r\n    deleteQuestion,\r\n    fetchAllReviewQuestions,\r\n    createPublicQuestion,\r\n    createReviewQuestion,\r\n    updateQuestion\r\n} from '../actions/questionActions';\r\n\r\nexport class QuestionsBox extends Component {\r\n    defaultQuestionsPerPage = 4;\r\n\r\n    state = {\r\n        filterInput: [],\r\n        addingQuestion: false,\r\n        isFiltering: false,\r\n        numOfQuestions: this.defaultQuestionsPerPage,\r\n        type: 'public',\r\n        editedPosition: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadQuestions(this.props.type);\r\n        if (this.props.type) this.setState({ type: this.props.type });\r\n        // DELETE THIS\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.props.questions);\r\n        if (this.props.type !== this.state.type) {\r\n            this.setState({ type: this.props.type });\r\n            this.loadQuestions(this.props.type);\r\n        }\r\n    }\r\n\r\n    loadQuestions = type => {\r\n        switch (type) {\r\n            case 'private':\r\n                if (!this.props.user) {\r\n                    this.props.history.push('/');\r\n                    return;\r\n                }\r\n                if (this.props.user.uid) this.props.fetchMyReviewQuestions(this.props.user.uid);\r\n                break;\r\n            case 'review':\r\n                if (!this.props.user || !this.props.isPublisher) {\r\n                    this.props.history.push('/');\r\n                    return;\r\n                }\r\n                this.props.fetchAllReviewQuestions();\r\n                break;\r\n            default:\r\n                this.props.fetchPublicQuestions();\r\n        }\r\n        this.resetEditingQuestion();\r\n        this.resetQuestionsNum();\r\n    };\r\n\r\n    onAddingQuestion = () => {\r\n        this.setState({ addingQuestion: true });\r\n    };\r\n\r\n    onEndAddQuestion = () => {\r\n        this.setState({ addingQuestion: false });\r\n    };\r\n\r\n    onAddedQuestion = (question, id = null) => {\r\n        if (!this.props.user || !this.props.user.uid) return;\r\n        if (this.state.type === 'private') {\r\n            !id\r\n                ? this.props.createReviewQuestion(question, this.props.user.uid)\r\n                : this.props.updateQuestion(id, 'reviewQuestions', question);\r\n        } else {\r\n            !id\r\n                ? this.props.createPublicQuestion(question, this.props.user.uid)\r\n                : this.props.updateQuestion(id, 'publicQuestions', question);\r\n        }\r\n        this.onEndAddQuestion();\r\n        this.resetEditingQuestion();\r\n    };\r\n\r\n    loadMoreQuestions = () => {\r\n        const oldQuestionsNum = this.state.numOfQuestions;\r\n        this.setState({ numOfQuestions: oldQuestionsNum + 3 });\r\n    };\r\n\r\n    resetQuestionsNum = () => {\r\n        if (this.state.numOfQuestions !== this.defaultQuestionsPerPage)\r\n            this.setState({ numOfQuestions: this.defaultQuestionsPerPage });\r\n    };\r\n\r\n    onFilterChange = input => {\r\n        if (input.length && input[0].length > 1) {\r\n            this.setState({ filterInput: input, isFiltering: true });\r\n            return;\r\n        }\r\n        this.setState({ filterInput: input, isFiltering: false });\r\n    };\r\n\r\n    onDeleteQuestion = id => {\r\n        switch (this.state.type) {\r\n            case 'private':\r\n                this.props.deleteQuestion(id, 'reviewQuestions');\r\n                break;\r\n            case 'review':\r\n                if (!this.props.isPublisher) return;\r\n                this.props.deleteQuestion(id, 'reviewQuestions');\r\n                break;\r\n            default:\r\n                if (!this.props.isPublisher) return;\r\n                this.props.deleteQuestion(id, 'publicQuestions');\r\n        }\r\n    };\r\n\r\n    onEditedQuestion = id => {\r\n        const position = this.props.questions.findIndex(el => el.id === id);\r\n        this.setState({ editedPosition: position });\r\n    };\r\n\r\n    resetEditingQuestion = () => {\r\n        this.setState({ editedPosition: null });\r\n    };\r\n\r\n    render() {\r\n        let btns = (\r\n            <Button\r\n                onClick={this.loadMoreQuestions}\r\n                className={\r\n                    this.state.numOfQuestions >= this.props.questions.length ? 'btn--grey' : ''\r\n                }\r\n            >\r\n                Załaduj więcej pytań\r\n            </Button>\r\n        );\r\n        if ((this.props.isAdmin || this.state.type === 'private') && this.state.type !== 'review')\r\n            btns = (\r\n                <div className=\"questions-box__btns\">\r\n                    <Button onClick={this.onAddingQuestion}>Dodaj pytanie</Button>\r\n                    <Button\r\n                        onClick={this.loadMoreQuestions}\r\n                        className={\r\n                            this.state.numOfQuestions >= this.props.questions.length\r\n                                ? 'btn--grey'\r\n                                : ''\r\n                        }\r\n                    >\r\n                        Załaduj więcej pytań\r\n                    </Button>\r\n                </div>\r\n            );\r\n        let questionsToRender = this.props.questions.filter(el => {\r\n            if (this.state.filterInput.length === 0) return true;\r\n            if (this.state.filterInput[0].length < 2) return true;\r\n            this.resetQuestionsNum();\r\n            let flag = false;\r\n            if (el.keyWords && el.keyWords.forEach)\r\n                el.keyWords.forEach(keyWord => {\r\n                    this.state.filterInput.forEach(key => {\r\n                        if (keyWord.toLowerCase().includes(key.toLowerCase()) && key.length > 1)\r\n                            flag = true;\r\n                    });\r\n                });\r\n            this.state.filterInput.forEach(key => {\r\n                if (\r\n                    el.question &&\r\n                    el.question.toLowerCase().includes(key.toLowerCase()) &&\r\n                    key.length > 1\r\n                )\r\n                    flag = true;\r\n            });\r\n\r\n            return flag;\r\n        });\r\n        if (questionsToRender && questionsToRender.length > this.state.numOfQuestions) {\r\n            questionsToRender.splice(this.state.numOfQuestions);\r\n        }\r\n        let addQuestionCard = null;\r\n        if (this.state.addingQuestion) {\r\n            addQuestionCard = (\r\n                <AddQestionCard onClose={this.onEndAddQuestion} onSubmit={this.onAddedQuestion} />\r\n            );\r\n        }\r\n        let questionsRender = (\r\n            <Questions\r\n                questions={questionsToRender}\r\n                onDeleteQuestion={this.onDeleteQuestion}\r\n                onEditQuestion={this.onEditedQuestion}\r\n                showLoader={!this.state.isFiltering}\r\n            />\r\n        );\r\n        if (this.state.editedPosition || this.state.editedPosition === 0) {\r\n            questionsRender = (\r\n                <Questions\r\n                    questions={questionsToRender}\r\n                    onDeleteQuestion={this.onDeleteQuestion}\r\n                    onEditQuestion={this.onEditedQuestion}\r\n                    showLoader={!this.state.isFiltering}\r\n                    editedPosition={this.state.editedPosition}\r\n                    methods={{\r\n                        onClose: this.resetEditingQuestion,\r\n                        onSubmit: this.onAddedQuestion\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        console.log(this.props.questions);\r\n        console.log(questionsToRender);\r\n        return (\r\n            <Fragment>\r\n                {/* <h1 className=\"heading-primary js--heading\">Baza pytań</h1> */}\r\n                <Filrer\r\n                    placeholder=\"Szukaj pytań po słowach kluczowych...\"\r\n                    onChange={this.onFilterChange}\r\n                />\r\n                {questionsRender}\r\n                {addQuestionCard}\r\n                {btns}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    questions: state.questions.items,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n    isPublisher: state.auth.isPublisher,\r\n    isAdmin: state.auth.isAdmin\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchPublicQuestions,\r\n    deleteQuestion,\r\n    fetchMyReviewQuestions,\r\n    fetchAllReviewQuestions,\r\n    createPublicQuestion,\r\n    createReviewQuestion,\r\n    updateQuestion\r\n})(QuestionsBox);\r\n","import {\r\n    FETCH_QUESTIONS,\r\n    NEW_PRIVATE_QUESTION,\r\n    DELETE_QUESTION,\r\n    QUESTION_ERROR,\r\n    NEW_PUBLIC_QUESTION,\r\n    UPDATE_QUESTION\r\n} from './types';\r\nimport { database } from '../firebase';\r\nimport { returnErrors } from '../actions/errorActions';\r\n\r\nexport const fetchPublicQuestions = () => dispatch => {\r\n    database\r\n        .ref('publicQuestions')\r\n        .once('value')\r\n        .then(data => data.val())\r\n        .then(questions => {\r\n            console.log('PUBLIC:', questions);\r\n            const newQuestions = [];\r\n            for (let question in questions) {\r\n                newQuestions.push({\r\n                    ...questions[question],\r\n                    id: question,\r\n                    isDeletable: false\r\n                });\r\n            }\r\n            dispatch({\r\n                type: FETCH_QUESTIONS,\r\n                payload: newQuestions\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const fetchMyReviewQuestions = uid => dispatch => {\r\n    console.log('GETTING Q FROM: ', uid);\r\n    if (!uid) {\r\n        console.error('Getting questions without beeing authenticated!');\r\n        return;\r\n    }\r\n    database\r\n        .ref('reviewQuestions')\r\n        .orderByChild('uid')\r\n        .equalTo(uid)\r\n        .once('value')\r\n        .then(data => data.val())\r\n        .then(questions => {\r\n            console.log(questions);\r\n            const newQuestions = [];\r\n            for (let question in questions) {\r\n                newQuestions.push({\r\n                    ...questions[question],\r\n                    id: question,\r\n                    isDeletable: true\r\n                });\r\n            }\r\n            dispatch({\r\n                type: FETCH_QUESTIONS,\r\n                payload: newQuestions\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const fetchAllReviewQuestions = () => dispatch => {\r\n    database\r\n        .ref('reviewQuestions')\r\n        .once('value')\r\n        .then(data => data.val())\r\n        .then(questions => {\r\n            console.log(questions);\r\n            const newQuestions = [];\r\n            for (let question in questions) {\r\n                newQuestions.push({\r\n                    ...questions[question],\r\n                    id: question,\r\n                    isDeletable: true\r\n                });\r\n            }\r\n            dispatch({\r\n                type: FETCH_QUESTIONS,\r\n                payload: newQuestions\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const createReviewQuestion = (question, user) => dispatch => {\r\n    console.log('SENDER', user);\r\n    const newQuestionRef = database.ref('reviewQuestions').push();\r\n    newQuestionRef\r\n        .set({\r\n            question: question.question,\r\n            answer: question.answer,\r\n            keyWords: question.keyWords || [],\r\n            uid: user.uid,\r\n            creator: {\r\n                firstName: user.firstName || 'Brak informacji',\r\n                lastName: user.lastName || 'Brak informacji',\r\n                email: user.email || 'Nie podano'\r\n            },\r\n            createdAt: Date.now()\r\n        })\r\n        .then(data => {\r\n            const newQuestion = { ...question };\r\n            newQuestion.id = newQuestionRef.key;\r\n            dispatch({\r\n                type: NEW_PRIVATE_QUESTION,\r\n                payload: newQuestion\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const createPublicQuestion = (question, user) => dispatch => {\r\n    console.log('SENDER', user);\r\n    if (!question.id) console.error('CANT MAKE QUESTION PUBLIC WITHOUT ITS ID');\r\n    const newQuestionRef = database.ref('publicQuestions').push();\r\n    newQuestionRef\r\n        .set({\r\n            question: question.question,\r\n            answer: question.answer,\r\n            keyWords: question.keyWords || [],\r\n            uid: user.uid || 'brak danych',\r\n            author: question.uid || 'brak danych',\r\n            createdAt: Date.now()\r\n        })\r\n        .then(data => {\r\n            const newQuestion = { ...question };\r\n            newQuestion.id = newQuestionRef.key;\r\n            dispatch({\r\n                type: NEW_PUBLIC_QUESTION,\r\n                payload: newQuestion\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const deleteQuestion = (id, databaseName) => dispatch => {\r\n    database\r\n        .ref(`${databaseName}/${id}`)\r\n        .remove(data => {\r\n            dispatch({\r\n                type: DELETE_QUESTION,\r\n                payload: id\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n\r\nexport const updateQuestion = (id, databaseName, dataToUpdate) => dispatch => {\r\n    database\r\n        .ref(`${databaseName}/${id}`)\r\n        .update({\r\n            ...dataToUpdate\r\n        })\r\n        .then(() => {\r\n            dispatch({\r\n                type: UPDATE_QUESTION,\r\n                payload: {\r\n                    id,\r\n                    question: dataToUpdate\r\n                }\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({\r\n                type: QUESTION_ERROR\r\n            });\r\n        });\r\n};\r\n","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <h3 className=\"footer__link\">&copy; Jan Radzimiński 2020</h3>\r\n        </footer>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nexport class LoginTextInput extends Component {\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ value: e.target.value });\r\n        this.props.onChange(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login__input-box\">\r\n                <input\r\n                    type={this.props.type}\r\n                    className=\"login__input\"\r\n                    id={this.props.id}\r\n                    placeholder={this.props.placeholder}\r\n                    onChange={this.onChange}\r\n                    value={this.state.value}\r\n                    name={this.props.id}\r\n                    required={this.props.required}\r\n                />\r\n                <label htmlFor={this.props.id} className=\"login__label\">\r\n                    {this.props.label}\r\n                </label>\r\n                {this.props.icon}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginTextInput;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { IoMdPerson, IoMdLock } from 'react-icons/io';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport { auth } from '../firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser, registerUser } from '../actions/authActions';\r\nimport LoginTextInput from './LoginTextInput';\r\n\r\nexport class Login extends Component {\r\n    state = {\r\n        register: false,\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        city: ''\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated) this.props.history.push('/');\r\n    }\r\n\r\n    onChangeFormType = type => {\r\n        this.setState({ register: type === true });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        if (!this.state.register) this.props.loginUser(this.state.email, this.state.password);\r\n        else\r\n            this.props.registerUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                city: this.state.city\r\n            });\r\n        if (!this.props.isLoading) this.props.history.push('/');\r\n    };\r\n\r\n    onInputChange = e => {\r\n        if (e.target) this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        let btns = (\r\n            <div className=\"login__btns\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"login__btn\"\r\n                    onClick={() => this.onChangeFormType(false)}\r\n                >\r\n                    Zaloguj się\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"login__btn login__btn--grey\"\r\n                    onClick={() => this.onChangeFormType(true)}\r\n                >\r\n                    Zarejestruj się\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        let title = 'Login';\r\n\r\n        if (this.state.register) {\r\n            btns = (\r\n                <div className=\"login__btns\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"login__btn  login__btn--grey\"\r\n                        onClick={() => this.onChangeFormType(false)}\r\n                    >\r\n                        Zaloguj się\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"login__btn\"\r\n                        onClick={() => this.onChangeFormType(true)}\r\n                    >\r\n                        Zarejestruj się\r\n                    </button>\r\n                </div>\r\n            );\r\n            title = 'Rejestracja';\r\n        }\r\n\r\n        let inputFields = (\r\n            <Fragment>\r\n                <LoginTextInput\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={this.onInputChange}\r\n                    label=\"Email:\"\r\n                    icon={<IoMdPerson className=\"login__icon\" />}\r\n                    required\r\n                />\r\n                <LoginTextInput\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Hasło\"\r\n                    onChange={this.onInputChange}\r\n                    label=\"Hasło:\"\r\n                    icon={<IoMdLock className=\"login__icon\" />}\r\n                    required\r\n                />\r\n            </Fragment>\r\n        );\r\n        if (this.state.register) {\r\n            inputFields = (\r\n                <Fragment>\r\n                    <LoginTextInput\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                        placeholder=\"Imię\"\r\n                        onChange={this.onInputChange}\r\n                        label=\"Imię:\"\r\n                        icon={<IoMdPerson className=\"login__icon\" />}\r\n                        required\r\n                    />\r\n                    <LoginTextInput\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        placeholder=\"Nazwisko\"\r\n                        onChange={this.onInputChange}\r\n                        label=\"Nazwisko:\"\r\n                        icon={<IoMdPerson className=\"login__icon\" />}\r\n                        required\r\n                    />\r\n                    <LoginTextInput\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={this.onInputChange}\r\n                        label=\"Email:\"\r\n                        icon={<MdEmail className=\"login__icon\" />}\r\n                        required\r\n                    />\r\n                    <LoginTextInput\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Hasło\"\r\n                        onChange={this.onInputChange}\r\n                        label=\"Hasło:\"\r\n                        icon={<IoMdLock className=\"login__icon\" />}\r\n                        required\r\n                    />\r\n                    <LoginTextInput\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        placeholder=\"Miejscowość\"\r\n                        onChange={this.onInputChange}\r\n                        label=\"Miejscowość zamieszkania:\"\r\n                        icon={<MdEmail className=\"login__icon\" />}\r\n                    />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <form className=\"login\" onSubmit={this.onSubmit}>\r\n                {btns}\r\n                <h2 className=\"login__title\">{title}</h2>\r\n                {inputFields}\r\n                <button type=\"submit\" className=\"btn btn--full\">\r\n                    Wyślij\r\n                </button>\r\n\r\n                {/* <div id=\"firebaseui-auth-container\"></div> */}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.auth.isLoading,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser, registerUser })(Login);\r\n","import {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    PUBLISHER_FAIL,\r\n    ADMIN_LOADED,\r\n    PUBLISHER_LOADED\r\n} from './types';\r\nimport { auth, database } from '../firebase';\r\nimport { returnErrors } from './errorActions';\r\nimport { backendFunctions } from '../firebase';\r\n\r\n// Load User\r\nexport const loadUser = user => dispatch => {\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n        user.getIdTokenResult()\r\n            .then(idTokenResult => {\r\n                console.log('CLAIMS: ', idTokenResult.claims);\r\n                if (idTokenResult.claims.admin)\r\n                    dispatch({\r\n                        type: ADMIN_LOADED\r\n                    });\r\n                else if (idTokenResult.claims.publisher) {\r\n                    dispatch({\r\n                        type: PUBLISHER_LOADED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: PUBLISHER_FAIL\r\n                });\r\n            });\r\n        database\r\n            .ref(`users/${user.uid}`)\r\n            .once('value')\r\n            .then(data => data.val())\r\n            .then(userData => {\r\n                console.log(userData);\r\n                if (!userData) throw new Error('User is not defined in database');\r\n                user.firstName = userData.firstName || 'brak informacji';\r\n                user.lastName = userData.lastName || 'brak informacji';\r\n                user.city = userData.city || 'brak informacji';\r\n                console.log(user);\r\n                dispatch({\r\n                    type: USER_LOADED,\r\n                    payload: user\r\n                });\r\n            })\r\n            .catch(err => {\r\n                dispatch(returnErrors(err.message, err.code));\r\n                user.firstName = 'brak informacji';\r\n                user.lastName = 'brak informacji';\r\n                user.city = 'brak informacji';\r\n                dispatch({\r\n                    type: USER_LOADED,\r\n                    payload: user\r\n                });\r\n            });\r\n    } else\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n};\r\n\r\nexport const loginUser = (email, password) => dispatch => {\r\n    dispatch({\r\n        type: USER_LOADING\r\n    });\r\n    auth.signInWithEmailAndPassword(email, password)\r\n        .then(cred => {\r\n            console.log(cred);\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({ type: LOGIN_FAIL });\r\n        });\r\n};\r\n\r\nexport const logOut = () => dispatch => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({ type: AUTH_ERROR });\r\n        });\r\n};\r\n\r\nexport const registerUser = userData => dispatch => {\r\n    auth.createUserWithEmailAndPassword(userData.email, userData.password)\r\n        .then(cred => cred.user)\r\n        .then(user => {\r\n            database.ref(`users/${user.uid}`).set({\r\n                firstName: userData.firstName,\r\n                lastName: userData.lastName,\r\n                email: user.email,\r\n                city: userData.city,\r\n                isPublisher: false,\r\n                isAdmin: false\r\n            });\r\n            dispatch({ type: REGISTER_SUCCESS });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n            dispatch({ type: REGISTER_FAIL });\r\n        });\r\n};\r\n\r\nexport const addPublisher = (email, uid) => dispatch => {\r\n    console.log('adding');\r\n    backendFunctions\r\n        .httpsCallable('addPublisherRole')({ email })\r\n        .then(() => {\r\n            database\r\n                .ref(`users/${uid}`)\r\n                .update({ isPublisher: true })\r\n                .catch(err => {\r\n                    dispatch(returnErrors(err.message, err.code));\r\n                });\r\n            console.log('added');\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n        });\r\n};\r\n\r\nexport const removePublisher = (email, uid) => dispatch => {\r\n    backendFunctions\r\n        .httpsCallable('removePublisherRole')({ email })\r\n        .then(() => {\r\n            database\r\n                .ref(`users/${uid}`)\r\n                .update({ isPublisher: false })\r\n                .catch(err => {\r\n                    dispatch(returnErrors(err.message, err.code));\r\n                });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n        });\r\n};\r\n\r\nexport const addAdmin = (email, uid) => dispatch => {\r\n    console.log('adding admin');\r\n    backendFunctions\r\n        .httpsCallable('addAdminRole')({ email })\r\n        .then(() => {\r\n            database\r\n                .ref(`users/${uid}`)\r\n                .update({ isAdmin: true })\r\n                .catch(err => {\r\n                    dispatch(returnErrors(err.message, err.code));\r\n                });\r\n            console.log('added admin');\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n        });\r\n};\r\n\r\nexport const removeAdmin = (email, uid) => dispatch => {\r\n    backendFunctions\r\n        .httpsCallable('removeAdminRole')({ email })\r\n        .then(() => {\r\n            database\r\n                .ref(`users/${uid}`)\r\n                .update({ isAdmin: false })\r\n                .catch(err => {\r\n                    dispatch(returnErrors(err.message, err.code));\r\n                });\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.message, err.code));\r\n        });\r\n};\r\n","import React from 'react';\r\nimport { logOut } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { IoIosLogOut } from 'react-icons/io';\r\nimport { MdAccountCircle, MdSettings } from 'react-icons/md';\r\n\r\nconst UserMenu = props => {\r\n    return (\r\n        <div className=\"user-menu\" onClick={props.onClick}>\r\n            <ul className=\"user-menu__list\">\r\n                <li className=\"user-menu__link\">\r\n                    {props.firstName} {props.lastName}\r\n                </li>\r\n                <li\r\n                    className=\"user-menu__link\"\r\n                    onClick={() => {\r\n                        props.onClick();\r\n                        props.history.push('/account');\r\n                    }}\r\n                >\r\n                    <MdAccountCircle className=\"user-menu__icon\" />\r\n                    Twoje konto\r\n                </li>\r\n                <li className=\"user-menu__link\">\r\n                    <MdSettings className=\"user-menu__icon\" />\r\n                    Zmień hasło\r\n                </li>\r\n                <li\r\n                    className=\"user-menu__link\"\r\n                    onClick={() => {\r\n                        props.logOut();\r\n                        props.onClick();\r\n                        props.history.push('/');\r\n                    }}\r\n                >\r\n                    <IoIosLogOut className=\"user-menu__icon\" /> Wyloguj się\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    firstName: state.auth.user.firstName,\r\n    lastName: state.auth.user.lastName\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { logOut })(UserMenu));\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst UserNavBar = props => {\r\n    return (\r\n        <div className=\"user-nav-bar\">\r\n            {console.log(props.history.location.pathname)}\r\n            <ul className=\"user-nav-bar__list\">\r\n                <li\r\n                    className={`user-nav-bar__link ${\r\n                        props.history.location.pathname === '/'\r\n                            ? 'user-nav-bar__link--active'\r\n                            : null\r\n                    }`}\r\n                    onClick={() => props.history.push('/')}\r\n                >\r\n                    Wszystkie pytania\r\n                </li>\r\n                <li\r\n                    className={`user-nav-bar__link ${\r\n                        props.history.location.pathname === '/prywatne'\r\n                            ? 'user-nav-bar__link--active'\r\n                            : null\r\n                    }`}\r\n                    onClick={() => props.history.push('/prywatne')}\r\n                >\r\n                    Moje pytania\r\n                </li>\r\n                {props.isPublisher || props.isAdmin ? (\r\n                    <li\r\n                        className={`user-nav-bar__link ${\r\n                            props.history.location.pathname === '/recenzje'\r\n                                ? 'user-nav-bar__link--active'\r\n                                : null\r\n                        }`}\r\n                        onClick={() => props.history.push('/recenzje')}\r\n                    >\r\n                        Pytania do recenzji\r\n                    </li>\r\n                ) : null}\r\n                {props.isAdmin ? (\r\n                    <li\r\n                        className={`user-nav-bar__link ${\r\n                            props.history.location.pathname === '/admin'\r\n                                ? 'user-nav-bar__link--active'\r\n                                : null\r\n                        }`}\r\n                        onClick={() => props.history.push('/admin')}\r\n                    >\r\n                        Admin\r\n                    </li>\r\n                ) : null}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserNavBar);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { FaQuestion } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { IoMdPerson, IoMdSettings } from 'react-icons/io';\r\nimport UserMenu from '../components/UserMenu';\r\nimport UserNavBar from './UserNavBar';\r\n\r\nexport class NavBar extends Component {\r\n    state = {\r\n        icon: false,\r\n        showUserMenu: false,\r\n        sticked: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        // window.addEventListener('scroll', () => {\r\n        //     if (window.scrollY * 1 > 50) this.setState({ sticked: true });\r\n        //     else this.setState({ sticked: false });\r\n        //     console.log(window.innerWidth);\r\n        // });\r\n        // window.addEventListener('click', () => {\r\n        //     if (this.state.showUserMenu) this.hideUserMenu();\r\n        // });\r\n    }\r\n\r\n    changeIcon = () => {\r\n        this.setState({ icon: !this.state.icon });\r\n    };\r\n\r\n    showUserMenu = () => {\r\n        this.setState({ showUserMenu: true });\r\n    };\r\n\r\n    hideUserMenu = () => {\r\n        this.setState({ showUserMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let userMenu = null;\r\n        if (this.state.showUserMenu) {\r\n            userMenu = <UserMenu onClick={() => this.hideUserMenu()} />;\r\n        }\r\n\r\n        let rightCorner = (\r\n            <Link to=\"/login\" style={{ textDecoration: 'none' }}>\r\n                <button className=\"btn btn--full btn--small\">Zaloguj się</button>\r\n            </Link>\r\n        );\r\n\r\n        if (this.props.isAuth) {\r\n            rightCorner = (\r\n                <div className=\"nav-bar__user\">\r\n                    <UserNavBar isAdmin={this.props.isAdmin} isPublisher={this.props.isPublisher} />\r\n                    <button\r\n                        className=\"nav-bar__login-btn\"\r\n                        onMouseEnter={() => this.changeIcon()}\r\n                        onMouseLeave={() => this.changeIcon()}\r\n                        onClick={this.state.showUserMenu ? this.hideUserMenu : this.showUserMenu}\r\n                    >\r\n                        {this.state.icon ? (\r\n                            <IoMdSettings className=\"nav-bar__login-icon\" />\r\n                        ) : (\r\n                            <IoMdPerson className=\"nav-bar__login-icon\" />\r\n                        )}\r\n                        {userMenu}\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <header className={'nav-bar ' + (this.state.sticked ? 'nav-bar--sticked' : '')}>\r\n                    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                        <div className=\"logo\">\r\n                            <div className=\"logo__img\">\r\n                                <FaQuestion className=\"logo__icon\" />\r\n                            </div>\r\n                            <div className=\"logo__text\">Baza Pytań</div>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    {rightCorner}\r\n                </header>\r\n                {this.state.showUserMenu ? (\r\n                    <div className=\"modal\" onClick={this.hideUserMenu}></div>\r\n                ) : null}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuthenticated,\r\n    isAdmin: state.auth.isAdmin,\r\n    isPublisher: state.auth.isPublisher\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(NavBar);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../components/Button';\r\nimport { MdSettings } from 'react-icons/md';\r\nimport { TiDelete } from 'react-icons/ti';\r\n\r\nexport class AccountDashboard extends Component {\r\n    state = {\r\n        editMode: false,\r\n        firstName: '',\r\n        lastName: '',\r\n        city: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuthenticated) return <Fragment></Fragment>;\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"heading-primary\">Twoje konto</h1>\r\n                <div className=\"account-info__box\">\r\n                    <div className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Email:</span>{' '}\r\n                        {this.props.user.email}\r\n                    </div>\r\n                    <div className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Imię:</span>{' '}\r\n                        {this.props.user.firstName}\r\n                    </div>\r\n                    <div className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Nazwisko:</span>{' '}\r\n                        {this.props.user.lastName}\r\n                    </div>\r\n                    <div className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Miejsce zamieszkania:</span>{' '}\r\n                        {this.props.user.city}\r\n                    </div>\r\n                    <div className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Status:</span>{' '}\r\n                        {this.props.isAdmin\r\n                            ? 'Admin'\r\n                            : this.props.isPublisher\r\n                            ? 'Recenzent'\r\n                            : 'Użytkownik'}\r\n                    </div>\r\n                    <div className=\"account-info__btns\">\r\n                        <Button type=\"short\">\r\n                            <MdSettings className=\"account-info__btn-icon\" />\r\n                            &emsp;&emsp; Edytuj dane\r\n                        </Button>\r\n                        <Button types={['short', 'delete']}>\r\n                            <TiDelete className=\"account-info__btn-icon\" />\r\n                            &emsp;&emsp; Usuń konto\r\n                        </Button>\r\n                    </div>\r\n                    {/* <h3 className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Konto utworzone:</span>{' '}\r\n                        {Date(this.props.user.createdAt)\r\n                            .toString()\r\n                            .slice(0, 21)}\r\n                    </h3>\r\n                    <h3 className=\"account-info__field\">\r\n                        <span className=\"account-info__field-title\">Ostatnio logowano:</span>{' '}\r\n                        {Date(this.props.user.lastLoginAt)\r\n                            .toString()\r\n                            .slice(0, 21)}\r\n                    </h3> */}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n    isAdmin: state.auth.isAdmin,\r\n    isPublisher: state.auth.isPublisher\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AccountDashboard);\r\n","import React, { Component } from 'react';\r\nimport { database } from '../firebase';\r\nimport { IoMdPerson } from 'react-icons/io';\r\nimport { FaBookReader, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport { addPublisher, removePublisher, addAdmin, removeAdmin } from '../actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport Button from './Button';\r\nimport Filter from './Filter';\r\nimport { Loader } from './Loader';\r\nimport Modal from 'react-modal';\r\nimport { MdDeleteForever, MdStar, MdSettings } from 'react-icons/md';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\n\r\nexport class UsersBox extends Component {\r\n    defaultUsersPerPage = 5;\r\n\r\n    state = {\r\n        users: [],\r\n        numOfUsers: 5,\r\n        filterInput: [],\r\n        isFiltering: false,\r\n        isLoading: true,\r\n        showModal: false,\r\n        currentUser: null,\r\n        modalMessage: '',\r\n        upgrading: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        database.ref('users').on('value', data => {\r\n            const newUsers = [];\r\n            const users = data.val();\r\n            for (let user in users) {\r\n                const newUser = {\r\n                    firstName: users[user].firstName,\r\n                    lastName: users[user].lastName,\r\n                    email: users[user].email,\r\n                    city: users[user].city,\r\n                    phone: users[user].phone,\r\n                    id: user,\r\n                    isPublisher: users[user].isPublisher === true,\r\n                    isAdmin: users[user].isAdmin === true\r\n                };\r\n                newUsers.push(newUser);\r\n            }\r\n            this.setState({ users: newUsers, isLoading: false });\r\n        });\r\n    }\r\n\r\n    loadMoreUsres = () => {\r\n        const oldUsersNum = this.state.numOfUsers;\r\n        this.setState({ numOfUsers: oldUsersNum + 5 });\r\n    };\r\n\r\n    resetUsersNum = () => {\r\n        if (this.state.numOfUsers !== this.defaultUsersPerPage)\r\n            this.setState({ numOfUsers: this.defaultUsersPerPage });\r\n    };\r\n\r\n    onFilterChange = input => {\r\n        if (input.length && input[0].length > 1) {\r\n            this.setState({ filterInput: input, isFiltering: true });\r\n            return;\r\n        }\r\n        this.setState({ filterInput: input, isFiltering: false });\r\n    };\r\n\r\n    onDeleteUser = () => {};\r\n\r\n    onDowngradeUser = user => {\r\n        this.setState({ isLoading: true, showModal: false });\r\n        if (user.isAdmin) this.props.removeAdmin(user.email, user.id);\r\n        else if (user.isPublisher) this.props.removePublisher(user.email, user.id);\r\n    };\r\n\r\n    onUpgradeUser = user => {\r\n        this.setState({ isLoading: true, showModal: false });\r\n        if (user.isAdmin) return;\r\n        if (user.isPublisher) this.props.addAdmin(user.email, user.id);\r\n        else this.props.addPublisher(user.email, user.id);\r\n    };\r\n\r\n    onConfirmUpgradeUser = id => {\r\n        const user = this.state.users.find(el => el.id === id);\r\n        let msg = `Czy na pewno chcesz mianować ${user.firstName} ${user.lastName} recenzentem?`;\r\n        if (user.isPublisher)\r\n            msg = `Czy na pewno chcesz mianować ${user.firstName} ${user.lastName} administratorem?`;\r\n        this.setState({\r\n            showModal: true,\r\n            currentUser: { ...user },\r\n            modalMessage: msg,\r\n            upgrading: true\r\n        });\r\n    };\r\n\r\n    onConfirmDowngradeUser = id => {\r\n        const user = this.state.users.find(el => el.id === id);\r\n        let msg = `Czy na pewno chcesz USUNĄĆ użytkownika ${user.firstName} ${user.lastName}?`;\r\n        if (user.isAdmin)\r\n            msg = `Czy na pewno chcesz usunąć status ADMINISTRATORA użytkownikowi ${user.firstName} ${user.lastName}?`;\r\n        else if (user.isPublisher)\r\n            msg = `Czy na pewno chcesz usunąć status recenzenta użytkownikowi ${user.firstName} ${user.lastName}?`;\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentUser: { ...user },\r\n            modalMessage: msg,\r\n            upgrading: false\r\n        });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ showModal: false });\r\n        this.setState({ currentUser: null });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        database.ref('users').off();\r\n    }\r\n\r\n    render() {\r\n        const usersToRender = this.state.users\r\n            .filter(el => el.email !== this.props.myEmail)\r\n            .filter(el => {\r\n                if (!this.state.isFiltering) return true;\r\n                this.resetUsersNum();\r\n                let flag = false;\r\n                this.state.filterInput.forEach(key => {\r\n                    if (el.firstName.toLowerCase().includes(key.toLowerCase()) && key.length > 1)\r\n                        flag = true;\r\n                    if (el.lastName.toLowerCase().includes(key.toLowerCase()) && key.length > 1)\r\n                        flag = true;\r\n                    if (el.email.toLowerCase().includes(key.toLowerCase()) && key.length > 1)\r\n                        flag = true;\r\n                    if (el.city.toLowerCase().includes(key.toLowerCase()) && key.length > 1)\r\n                        flag = true;\r\n                });\r\n                return flag;\r\n            })\r\n            .slice(0, this.state.numOfUsers)\r\n            .map(el => (\r\n                <div key={el.id} id={el.id} className=\"users-box__user\">\r\n                    <div className=\"users-box__user-icon-box\">\r\n                        <div className=\"users-box__user-icon-container\">\r\n                            {el.isAdmin ? (\r\n                                <MdSettings className=\"users-box__user-icon\" />\r\n                            ) : el.isPublisher ? (\r\n                                <FaBookReader className=\"users-box__user-icon\" />\r\n                            ) : (\r\n                                <IoMdPerson className=\"users-box__user-icon\" />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"users-box__user-info-box\">\r\n                        <div className=\"users-box__user-name\">\r\n                            {el.firstName} {el.lastName}\r\n                        </div>\r\n                        <div className=\"users-box__user-info\">\r\n                            <div className=\"users-box__user-info-field\">\r\n                                Email: &emsp;\r\n                                {el.email}\r\n                            </div>\r\n                            <div className=\"users-box__user-info-field\">\r\n                                Miasto:&emsp;\r\n                                {el.city}\r\n                            </div>\r\n                            <div className=\"users-box__user-info-field\">\r\n                                Status:&emsp;\r\n                                {el.isAdmin\r\n                                    ? 'Administrator'\r\n                                    : el.isPublisher\r\n                                    ? 'Recenzent'\r\n                                    : 'Użytkownik'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"users-box__btns\">\r\n                        <button\r\n                            className={`users-box__btn ${\r\n                                el.isAdmin\r\n                                    ? 'users-box__btn--disabled'\r\n                                    : el.isPublisher\r\n                                    ? 'users-box__btn--premium'\r\n                                    : 'users-box__btn--confirm'\r\n                            }`}\r\n                            onClick={() => this.onConfirmUpgradeUser(el.id)}\r\n                        >\r\n                            <MdStar className=\"users-box__btn-icon\" />\r\n                        </button>\r\n                        <button\r\n                            className={'users-box__btn users-box__btn--delete'}\r\n                            onClick={() => this.onConfirmDowngradeUser(el.id)}\r\n                        >\r\n                            {el.isAdmin || el.isPublisher ? (\r\n                                <FaAngleDoubleDown className=\"users-box__btn-icon\" />\r\n                            ) : (\r\n                                <MdDeleteForever className=\"users-box__btn-icon\" />\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ));\r\n\r\n        return (\r\n            <div className=\"users-box\">\r\n                <Modal\r\n                    isOpen={this.state.showModal}\r\n                    style={customStyles}\r\n                    contentLabel=\"Example Modal\"\r\n                    overlayClassName=\"modal__overlay\"\r\n                    onRequestClose={this.onCloseModal}\r\n                >\r\n                    <div className=\"modal__window\">\r\n                        <h2>{this.state.modalMessage}</h2>\r\n                        <div className=\"modal__btns\">\r\n                            <Button\r\n                                type=\"short\"\r\n                                onClick={() =>\r\n                                    this.state.upgrading\r\n                                        ? this.onUpgradeUser(this.state.currentUser)\r\n                                        : this.onDowngradeUser(this.state.currentUser)\r\n                                }\r\n                            >\r\n                                Tak\r\n                            </Button>\r\n                            <Button types={['delete', 'short']} onClick={this.onCloseModal}>\r\n                                Anuluj\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Filter placeholder=\"Szukaj użytkowników\" onChange={this.onFilterChange} />\r\n                {this.state.isLoading ? (\r\n                    <div className=\"u-centered\">\r\n                        <Loader />\r\n                    </div>\r\n                ) : (\r\n                    usersToRender\r\n                )}\r\n                <Button\r\n                    onClick={this.loadMoreUsres}\r\n                    className={this.state.numOfUsers >= this.state.users.length ? 'btn--grey' : ''}\r\n                >\r\n                    Załaduj więcej uzytkowników\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    myEmail: state.auth.user ? state.auth.user.email : ''\r\n});\r\n\r\nexport default connect(mapStateToProps, { addPublisher, removePublisher, addAdmin, removeAdmin })(\r\n    UsersBox\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { database } from '../firebase';\r\nimport UsersBox from '../components/UsersBox';\r\n\r\nexport class AdminDashboard extends Component {\r\n    state = {\r\n        users: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!this.props.isAdmin) this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"admin-dash\">\r\n                <h1 className=\"heading-primary\">Zarządzaj użytkownikami</h1>\r\n                <UsersBox />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAdmin: state.auth.isAdmin\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AdminDashboard);\r\n","import React, { Component, Fragment } from 'react';\r\nimport QuestionsBox from '../components/QuestionsBox';\r\nimport { Footer } from '../layouts/Footer';\r\nimport { Redirect, Link, Route, Switch } from 'react-router-dom';\r\nimport Login from '../components/Login';\r\nimport NavBar from '../layouts/NavBar';\r\nimport { connect } from 'react-redux';\r\nimport { loadUser } from '../actions/authActions';\r\nimport { auth } from '../firebase';\r\nimport AccountDashboard from './AccountDashboard';\r\nimport UserNavBar from '../layouts/UserNavBar';\r\nimport AdminDashboard from './AdminDashboard';\r\n\r\nexport class AllQuestionsView extends Component {\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged(user => {\r\n            console.log(user);\r\n            this.props.loadUser(user);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <main className=\"main\">\r\n                    <section className=\"questions\">\r\n                        <NavBar />\r\n                        <div className=\"content-container\">\r\n                            <Switch>\r\n                                <Route path=\"/login\" component={Login} />\r\n                                <Route path=\"/account\" component={AccountDashboard} />\r\n                                <Route path=\"/admin\" component={AdminDashboard} />\r\n                                <Route\r\n                                    path=\"/prywatne\"\r\n                                    render={props => <QuestionsBox {...props} type={'private'} />}\r\n                                />\r\n                                <Route\r\n                                    path=\"/recenzje\"\r\n                                    render={props => <QuestionsBox {...props} type={'review'} />}\r\n                                />\r\n                                <Route exact path=\"/\" component={QuestionsBox} />\r\n                                <Route path=\"/pytania\" component={QuestionsBox} />\r\n                            </Switch>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n\r\n                <Footer />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser })(AllQuestionsView);\r\n","import {\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    ADMIN_FAIL,\r\n    ADMIN_LOADED,\r\n    PUBLISHER_FAIL,\r\n    PUBLISHER_LOADED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n    isAdmin: false,\r\n    isPublisher: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                isAdmin: false,\r\n                isPublisher: false\r\n            };\r\n        case ADMIN_LOADED:\r\n            return {\r\n                ...state,\r\n                isAdmin: true,\r\n                isPublisher: true\r\n            };\r\n        case PUBLISHER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAdmin: false,\r\n                isPublisher: true\r\n            };\r\n        case ADMIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isAdmin: false\r\n            };\r\n        case PUBLISHER_FAIL:\r\n            return {\r\n                ...state,\r\n                isPublisher: false,\r\n                isAdmin: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    FETCH_QUESTIONS,\r\n    NEW_PRIVATE_QUESTION,\r\n    NEW_PUBLIC_QUESTION,\r\n    DELETE_QUESTION,\r\n    UPDATE_QUESTION\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    let newItems = [...state.items];\r\n    switch (action.type) {\r\n        case FETCH_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case NEW_PRIVATE_QUESTION:\r\n            newItems.push(action.payload);\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                item: action.payload\r\n            };\r\n        case NEW_PUBLIC_QUESTION:\r\n            newItems.push(action.payload);\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                item: action.payload\r\n            };\r\n        case DELETE_QUESTION:\r\n            newItems = newItems.filter(el => el.id !== action.payload);\r\n            return {\r\n                ...state,\r\n                items: newItems\r\n            };\r\n        case UPDATE_QUESTION:\r\n            let newItemIndex = newItems.findIndex(el => el.id === action.payload.id);\r\n            newItems[newItemIndex] = {\r\n                ...newItems[newItemIndex],\r\n                ...action.payload.question\r\n            };\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                item: newItems[newItemIndex]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return { ...initialState };\r\n        default: {\r\n            return { ...state };\r\n        }\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport questionReducer from './questionReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    questions: questionReducer,\r\n    error: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n","import React from 'react';\nimport './assets/sass/main.scss';\nimport AllQuestionsView from './views/AllQuestionsView';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <div className=\"App\">\n                    <AllQuestionsView />\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}